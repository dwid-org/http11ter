
INTRODUCTION, paragraph 1:
OLD:

 HTTPbis Working Group                                   R. Fielding, Ed.
 Internet-Draft                                                     Adobe
 Obsoletes: 2145, 2616                                    J. Reschke, Ed.
 (if approved)                                                 greenbytes
 Updates: 2817, 2818 (if approved)                           May 12, 2014
 Intended status: Standards Track
 Expires: November 13, 2014

NEW:

 Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
 Request for Comments: 7230                                         Adobe
 Obsoletes: 2145, 2616                                    J. Reschke, Ed.
 Updates: 2817, 2818                                           greenbytes
 Category: Standards Track                                       May 2014
 ISSN: 2070-1721


INTRODUCTION, paragraph 2:
OLD:

    Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing
                  draft-ietf-httpbis-p1-messaging-latest

NEW:

    Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing


INTRODUCTION, paragraph 5:
OLD:

 Editorial Note (To be removed by RFC Editor)
 
    Discussion of this draft takes place on the HTTPBIS working group
    mailing list (ietf-http-wg@w3.org), which is archived at
    <http://lists.w3.org/Archives/Public/ietf-http-wg/>.
 
    The current issues list is at
    <http://tools.ietf.org/wg/httpbis/trac/report/3> and related
    documents (including fancy diffs) can be found at
    <http://tools.ietf.org/wg/httpbis/>.
 
    _This is a temporary document for the purpose of tracking the
    editorial changes made during the AUTH48 (RFC publication) phase._
 
 Status of This Memo

NEW:

 Status of This Memo


INTRODUCTION, paragraph 6:
OLD:

    This Internet-Draft is submitted in full conformance with the
    provisions of BCP 78 and BCP 79.
 
    Internet-Drafts are working documents of the Internet Engineering
    Task Force (IETF).  Note that other groups may also distribute
    working documents as Internet-Drafts.  The list of current Internet-
    Drafts is at http://datatracker.ietf.org/drafts/current/.

NEW:

    This is an Internet Standards Track document.


INTRODUCTION, paragraph 7:
OLD:

    Internet-Drafts are draft documents valid for a maximum of six months
    and may be updated, replaced, or obsoleted by other documents at any
    time.  It is inappropriate to use Internet-Drafts as reference
    material or to cite them other than as "work in progress."

NEW:

    This document is a product of the Internet Engineering Task Force
    (IETF).  It represents the consensus of the IETF community.  It has
    received public review and has been approved for publication by the
    Internet Engineering Steering Group (IESG).  Further information on
    Internet Standards is available in Section 2 of RFC 5741.


INTRODUCTION, paragraph 8:
OLD:

    This Internet-Draft will expire on November 13, 2014.

NEW:

    Information about the current status of this document, any errata,
    and how to provide feedback on it may be obtained at
    http://www.rfc-editor.org/info/rfc7230.


Section 11., paragraph 0:
OLD:

    1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  5
      1.1.  Requirements Notation  . . . . . . . . . . . . . . . . . .  6
      1.2.  Syntax Notation  . . . . . . . . . . . . . . . . . . . . .  6
    2.  Architecture . . . . . . . . . . . . . . . . . . . . . . . . .  6
      2.1.  Client/Server Messaging  . . . . . . . . . . . . . . . . .  7
      2.2.  Implementation Diversity . . . . . . . . . . . . . . . . .  8
      2.3.  Intermediaries . . . . . . . . . . . . . . . . . . . . . .  9
      2.4.  Caches . . . . . . . . . . . . . . . . . . . . . . . . . . 11
      2.5.  Conformance and Error Handling . . . . . . . . . . . . . . 12
      2.6.  Protocol Versioning  . . . . . . . . . . . . . . . . . . . 13
      2.7.  Uniform Resource Identifiers . . . . . . . . . . . . . . . 16
        2.7.1.  http URI Scheme  . . . . . . . . . . . . . . . . . . . 16
        2.7.2.  https URI Scheme . . . . . . . . . . . . . . . . . . . 18
        2.7.3.  http and https URI Normalization and Comparison  . . . 19
 
    3.  Message Format . . . . . . . . . . . . . . . . . . . . . . . . 19
      3.1.  Start Line . . . . . . . . . . . . . . . . . . . . . . . . 20
        3.1.1.  Request Line . . . . . . . . . . . . . . . . . . . . . 21
        3.1.2.  Status Line  . . . . . . . . . . . . . . . . . . . . . 22
      3.2.  Header Fields  . . . . . . . . . . . . . . . . . . . . . . 22
        3.2.1.  Field Extensibility  . . . . . . . . . . . . . . . . . 23
        3.2.2.  Field Order  . . . . . . . . . . . . . . . . . . . . . 23
        3.2.3.  Whitespace . . . . . . . . . . . . . . . . . . . . . . 24
        3.2.4.  Field Parsing  . . . . . . . . . . . . . . . . . . . . 24
        3.2.5.  Field Limits . . . . . . . . . . . . . . . . . . . . . 26
        3.2.6.  Field Value Components . . . . . . . . . . . . . . . . 26
      3.3.  Message Body . . . . . . . . . . . . . . . . . . . . . . . 27
        3.3.1.  Transfer-Encoding  . . . . . . . . . . . . . . . . . . 28
        3.3.2.  Content-Length . . . . . . . . . . . . . . . . . . . . 29
        3.3.3.  Message Body Length  . . . . . . . . . . . . . . . . . 31
      3.4.  Handling Incomplete Messages . . . . . . . . . . . . . . . 33
      3.5.  Message Parsing Robustness . . . . . . . . . . . . . . . . 34
    4.  Transfer Codings . . . . . . . . . . . . . . . . . . . . . . . 34
      4.1.  Chunked Transfer Coding  . . . . . . . . . . . . . . . . . 35
        4.1.1.  Chunk Extensions . . . . . . . . . . . . . . . . . . . 36
        4.1.2.  Chunked Trailer Part . . . . . . . . . . . . . . . . . 36
        4.1.3.  Decoding Chunked . . . . . . . . . . . . . . . . . . . 37
      4.2.  Compression Codings  . . . . . . . . . . . . . . . . . . . 37
        4.2.1.  Compress Coding  . . . . . . . . . . . . . . . . . . . 38
        4.2.2.  Deflate Coding . . . . . . . . . . . . . . . . . . . . 38
        4.2.3.  Gzip Coding  . . . . . . . . . . . . . . . . . . . . . 38
      4.3.  TE . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
      4.4.  Trailer  . . . . . . . . . . . . . . . . . . . . . . . . . 39
    5.  Message Routing  . . . . . . . . . . . . . . . . . . . . . . . 39
      5.1.  Identifying a Target Resource  . . . . . . . . . . . . . . 40
      5.2.  Connecting Inbound . . . . . . . . . . . . . . . . . . . . 40
      5.3.  Request Target . . . . . . . . . . . . . . . . . . . . . . 41
        5.3.1.  origin-form  . . . . . . . . . . . . . . . . . . . . . 41
        5.3.2.  absolute-form  . . . . . . . . . . . . . . . . . . . . 41
        5.3.3.  authority-form . . . . . . . . . . . . . . . . . . . . 42
        5.3.4.  asterisk-form  . . . . . . . . . . . . . . . . . . . . 42
      5.4.  Host . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
      5.5.  Effective Request URI  . . . . . . . . . . . . . . . . . . 44
      5.6.  Associating a Response to a Request  . . . . . . . . . . . 46
      5.7.  Message Forwarding . . . . . . . . . . . . . . . . . . . . 46
        5.7.1.  Via  . . . . . . . . . . . . . . . . . . . . . . . . . 46
        5.7.2.  Transformations  . . . . . . . . . . . . . . . . . . . 48
    6.  Connection Management  . . . . . . . . . . . . . . . . . . . . 49
      6.1.  Connection . . . . . . . . . . . . . . . . . . . . . . . . 50
      6.2.  Establishment  . . . . . . . . . . . . . . . . . . . . . . 51
      6.3.  Persistence  . . . . . . . . . . . . . . . . . . . . . . . 51
        6.3.1.  Retrying Requests  . . . . . . . . . . . . . . . . . . 52
        6.3.2.  Pipelining . . . . . . . . . . . . . . . . . . . . . . 53
 
      6.4.  Concurrency  . . . . . . . . . . . . . . . . . . . . . . . 54
      6.5.  Failures and Timeouts  . . . . . . . . . . . . . . . . . . 54
      6.6.  Tear-down  . . . . . . . . . . . . . . . . . . . . . . . . 55
      6.7.  Upgrade  . . . . . . . . . . . . . . . . . . . . . . . . . 56
    7.  ABNF List Extension: #rule . . . . . . . . . . . . . . . . . . 58
    8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 59
      8.1.  Header Field Registration  . . . . . . . . . . . . . . . . 59
      8.2.  URI Scheme Registration  . . . . . . . . . . . . . . . . . 60
      8.3.  Internet Media Type Registration . . . . . . . . . . . . . 60
        8.3.1.  Internet Media Type message/http . . . . . . . . . . . 61
        8.3.2.  Internet Media Type application/http . . . . . . . . . 62
      8.4.  Transfer Coding Registry . . . . . . . . . . . . . . . . . 63
        8.4.1.  Procedure  . . . . . . . . . . . . . . . . . . . . . . 63
        8.4.2.  Registration . . . . . . . . . . . . . . . . . . . . . 64
      8.5.  Content Coding Registration  . . . . . . . . . . . . . . . 64
      8.6.  Upgrade Token Registry . . . . . . . . . . . . . . . . . . 64
        8.6.1.  Procedure  . . . . . . . . . . . . . . . . . . . . . . 65
        8.6.2.  Upgrade Token Registration . . . . . . . . . . . . . . 65
    9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 66
      9.1.  Establishing Authority . . . . . . . . . . . . . . . . . . 66
      9.2.  Risks of Intermediaries  . . . . . . . . . . . . . . . . . 67
      9.3.  Attacks via Protocol Element Length  . . . . . . . . . . . 67
      9.4.  Response Splitting . . . . . . . . . . . . . . . . . . . . 68
      9.5.  Request Smuggling  . . . . . . . . . . . . . . . . . . . . 69
      9.6.  Message Integrity  . . . . . . . . . . . . . . . . . . . . 69
      9.7.  Message Confidentiality  . . . . . . . . . . . . . . . . . 69
      9.8.  Privacy of Server Log Information  . . . . . . . . . . . . 70
    10. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 70
    11. References . . . . . . . . . . . . . . . . . . . . . . . . . . 72
      11.1. Normative References . . . . . . . . . . . . . . . . . . . 72
      11.2. Informative References . . . . . . . . . . . . . . . . . . 73
    Appendix A.  HTTP Version History  . . . . . . . . . . . . . . . . 75
      A.1.  Changes from HTTP/1.0  . . . . . . . . . . . . . . . . . . 76
        A.1.1.  Multi-homed Web Servers  . . . . . . . . . . . . . . . 76
        A.1.2.  Keep-Alive Connections . . . . . . . . . . . . . . . . 77
        A.1.3.  Introduction of Transfer-Encoding  . . . . . . . . . . 77
      A.2.  Changes from RFC 2616  . . . . . . . . . . . . . . . . . . 77
    Appendix B.  Collected ABNF  . . . . . . . . . . . . . . . . . . . 80
    Index  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82

NEW:

    1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  5
      1.1.  Requirements Notation  . . . . . . . . . . . . . . . . . .  6
      1.2.  Syntax Notation  . . . . . . . . . . . . . . . . . . . . .  6
    2.  Architecture . . . . . . . . . . . . . . . . . . . . . . . . .  6
      2.1.  Client/Server Messaging  . . . . . . . . . . . . . . . . .  7
      2.2.  Implementation Diversity . . . . . . . . . . . . . . . . .  8
      2.3.  Intermediaries . . . . . . . . . . . . . . . . . . . . . .  9
      2.4.  Caches . . . . . . . . . . . . . . . . . . . . . . . . . . 11
      2.5.  Conformance and Error Handling . . . . . . . . . . . . . . 12
      2.6.  Protocol Versioning  . . . . . . . . . . . . . . . . . . . 13
      2.7.  Uniform Resource Identifiers . . . . . . . . . . . . . . . 16
        2.7.1.  http URI Scheme  . . . . . . . . . . . . . . . . . . . 16
        2.7.2.  https URI Scheme . . . . . . . . . . . . . . . . . . . 18
        2.7.3.  http and https URI Normalization and Comparison  . . . 19
    3.  Message Format . . . . . . . . . . . . . . . . . . . . . . . . 19
      3.1.  Start Line . . . . . . . . . . . . . . . . . . . . . . . . 20
        3.1.1.  Request Line . . . . . . . . . . . . . . . . . . . . . 21
        3.1.2.  Status Line  . . . . . . . . . . . . . . . . . . . . . 22
      3.2.  Header Fields  . . . . . . . . . . . . . . . . . . . . . . 22
        3.2.1.  Field Extensibility  . . . . . . . . . . . . . . . . . 23
        3.2.2.  Field Order  . . . . . . . . . . . . . . . . . . . . . 23
        3.2.3.  Whitespace . . . . . . . . . . . . . . . . . . . . . . 24
        3.2.4.  Field Parsing  . . . . . . . . . . . . . . . . . . . . 24
        3.2.5.  Field Limits . . . . . . . . . . . . . . . . . . . . . 26
        3.2.6.  Field Value Components . . . . . . . . . . . . . . . . 26
      3.3.  Message Body . . . . . . . . . . . . . . . . . . . . . . . 27
        3.3.1.  Transfer-Encoding  . . . . . . . . . . . . . . . . . . 28
        3.3.2.  Content-Length . . . . . . . . . . . . . . . . . . . . 29
        3.3.3.  Message Body Length  . . . . . . . . . . . . . . . . . 31
      3.4.  Handling Incomplete Messages . . . . . . . . . . . . . . . 33
      3.5.  Message Parsing Robustness . . . . . . . . . . . . . . . . 34
    4.  Transfer Codings . . . . . . . . . . . . . . . . . . . . . . . 34
      4.1.  Chunked Transfer Coding  . . . . . . . . . . . . . . . . . 35
        4.1.1.  Chunk Extensions . . . . . . . . . . . . . . . . . . . 36
        4.1.2.  Chunked Trailer Part . . . . . . . . . . . . . . . . . 36
        4.1.3.  Decoding Chunked . . . . . . . . . . . . . . . . . . . 37
      4.2.  Compression Codings  . . . . . . . . . . . . . . . . . . . 37
        4.2.1.  Compress Coding  . . . . . . . . . . . . . . . . . . . 38
        4.2.2.  Deflate Coding . . . . . . . . . . . . . . . . . . . . 38
        4.2.3.  Gzip Coding  . . . . . . . . . . . . . . . . . . . . . 38
      4.3.  TE . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
      4.4.  Trailer  . . . . . . . . . . . . . . . . . . . . . . . . . 39
    5.  Message Routing  . . . . . . . . . . . . . . . . . . . . . . . 39
      5.1.  Identifying a Target Resource  . . . . . . . . . . . . . . 40
      5.2.  Connecting Inbound . . . . . . . . . . . . . . . . . . . . 40
      5.3.  Request Target . . . . . . . . . . . . . . . . . . . . . . 41
        5.3.1.  origin-form  . . . . . . . . . . . . . . . . . . . . . 41
        5.3.2.  absolute-form  . . . . . . . . . . . . . . . . . . . . 41
        5.3.3.  authority-form . . . . . . . . . . . . . . . . . . . . 42
        5.3.4.  asterisk-form  . . . . . . . . . . . . . . . . . . . . 42
      5.4.  Host . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
      5.5.  Effective Request URI  . . . . . . . . . . . . . . . . . . 44
      5.6.  Associating a Response to a Request  . . . . . . . . . . . 46
      5.7.  Message Forwarding . . . . . . . . . . . . . . . . . . . . 46
        5.7.1.  Via  . . . . . . . . . . . . . . . . . . . . . . . . . 46
        5.7.2.  Transformations  . . . . . . . . . . . . . . . . . . . 48
    6.  Connection Management  . . . . . . . . . . . . . . . . . . . . 49
      6.1.  Connection . . . . . . . . . . . . . . . . . . . . . . . . 50
      6.2.  Establishment  . . . . . . . . . . . . . . . . . . . . . . 51
      6.3.  Persistence  . . . . . . . . . . . . . . . . . . . . . . . 51
        6.3.1.  Retrying Requests  . . . . . . . . . . . . . . . . . . 52
        6.3.2.  Pipelining . . . . . . . . . . . . . . . . . . . . . . 53
      6.4.  Concurrency  . . . . . . . . . . . . . . . . . . . . . . . 54
      6.5.  Failures and Timeouts  . . . . . . . . . . . . . . . . . . 54
      6.6.  Tear-down  . . . . . . . . . . . . . . . . . . . . . . . . 55
      6.7.  Upgrade  . . . . . . . . . . . . . . . . . . . . . . . . . 56
    7.  ABNF List Extension: #rule . . . . . . . . . . . . . . . . . . 58
    8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 59
      8.1.  Header Field Registration  . . . . . . . . . . . . . . . . 59
      8.2.  URI Scheme Registration  . . . . . . . . . . . . . . . . . 60
      8.3.  Internet Media Type Registration . . . . . . . . . . . . . 60
        8.3.1.  Internet Media Type message/http . . . . . . . . . . . 61
        8.3.2.  Internet Media Type application/http . . . . . . . . . 62
      8.4.  Transfer Coding Registry . . . . . . . . . . . . . . . . . 63
        8.4.1.  Procedure  . . . . . . . . . . . . . . . . . . . . . . 63
        8.4.2.  Registration . . . . . . . . . . . . . . . . . . . . . 64
      8.5.  Content Coding Registration  . . . . . . . . . . . . . . . 64
      8.6.  Upgrade Token Registry . . . . . . . . . . . . . . . . . . 64
        8.6.1.  Procedure  . . . . . . . . . . . . . . . . . . . . . . 65
        8.6.2.  Upgrade Token Registration . . . . . . . . . . . . . . 65
    9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 66
      9.1.  Establishing Authority . . . . . . . . . . . . . . . . . . 66
      9.2.  Risks of Intermediaries  . . . . . . . . . . . . . . . . . 67
      9.3.  Attacks via Protocol Element Length  . . . . . . . . . . . 67
      9.4.  Response Splitting . . . . . . . . . . . . . . . . . . . . 68
      9.5.  Request Smuggling  . . . . . . . . . . . . . . . . . . . . 69
      9.6.  Message Integrity  . . . . . . . . . . . . . . . . . . . . 69
      9.7.  Message Confidentiality  . . . . . . . . . . . . . . . . . 69
      9.8.  Privacy of Server Log Information  . . . . . . . . . . . . 70
    10. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 70
    11. References . . . . . . . . . . . . . . . . . . . . . . . . . . 72
      11.1. Normative References . . . . . . . . . . . . . . . . . . . 72
      11.2. Informative References . . . . . . . . . . . . . . . . . . 73
    Appendix A.  HTTP Version History  . . . . . . . . . . . . . . . . 75
      A.1.  Changes from HTTP/1.0  . . . . . . . . . . . . . . . . . . 76
        A.1.1.  Multihomed Web Servers . . . . . . . . . . . . . . . . 76
        A.1.2.  Keep-Alive Connections . . . . . . . . . . . . . . . . 76
        A.1.3.  Introduction of Transfer-Encoding  . . . . . . . . . . 77
      A.2.  Changes from RFC 2616  . . . . . . . . . . . . . . . . . . 77
    Appendix B.  Collected ABNF  . . . . . . . . . . . . . . . . . . . 79
    Index  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82


Section 2.7., paragraph 3:
OLD:

      URI-reference = <URI-reference, see [RFC3986], Section 4.1>
      absolute-URI  = <absolute-URI, see [RFC3986], Section 4.3>
      relative-part = <relative-part, see [RFC3986], Section 4.2>
      scheme        = <scheme, see [RFC3986], Section 3.1>
      authority     = <authority, see [RFC3986], Section 3.2>
      uri-host      = <host, see [RFC3986], Section 3.2.2>
      port          = <port, see [RFC3986], Section 3.2.3>
      path-abempty  = <path-abempty, see [RFC3986], Section 3.3>
      segment       = <segment, see [RFC3986], Section 3.3>
      query         = <query, see [RFC3986], Section 3.4>
      fragment      = <fragment, see [RFC3986], Section 3.5>

NEW:

      URI-reference = <URI-reference, defined in [RFC3986], Section 4.1>
      absolute-URI  = <absolute-URI, defined in [RFC3986], Section 4.3>
      relative-part = <relative-part, defined in [RFC3986], Section 4.2>
      scheme        = <scheme, defined in [RFC3986], Section 3.1>
      authority     = <authority, defined in [RFC3986], Section 3.2>
      uri-host      = <host, defined in [RFC3986], Section 3.2.2>
      port          = <port, defined in [RFC3986], Section 3.2.3>
      path-abempty  = <path-abempty, defined in [RFC3986], Section 3.3>
      segment       = <segment, defined in [RFC3986], Section 3.3>
      query         = <query, defined in [RFC3986], Section 3.4>
      fragment      = <fragment, defined in [RFC3986], Section 3.5>


Section 3.2.4., paragraph 8:
OLD:

    Historically, HTTP has allowed field content with text in the
    ISO-8859-1 charset [ISO-8859-1], supporting other charsets only
    through use of [RFC2047] encoding.  In practice, most HTTP header
    field values use only a subset of the US-ASCII charset [USASCII].
    Newly defined header fields SHOULD limit their field values to
    US-ASCII octets.  A recipient SHOULD treat other octets in field
    content (obs-text) as opaque data.

NEW:

    Historically, HTTP has allowed field content with text in the
    ISO-8859-charset [ISO-8859-1], supporting other charsets only through
    use of [RFC2047] encoding.  In practice, most HTTP header field
    values use only a subset of the US-ASCII charset [USASCII].  Newly
    defined header fields SHOULD limit their field values to US-ASCII
    octets.  A recipient SHOULD treat other octets in field content
    (obs-text) as opaque data.


Section 3.3., paragraph 4:
OLD:

    The presence of a message body in a request is signaled by a Content-
    Length or Transfer-Encoding header field.  Request message framing is
    independent of method semantics, even if the method does not define
    any use for a message body.

NEW:

    The presence of a message body in a request is signaled by a
    "Content-Length" or Transfer-Encoding header field.  Request message
    framing is independent of method semantics, even if the method does
    not define any use for a message body.


Section 5.7.2., paragraph 6:
OLD:

    A proxy MUST NOT transform the payload (Section 3.3 of [RFC7231]) of
    a message that contains a no-transform cache-control directive
    (Section 5.2 of [RFC7234]).

NEW:

    A proxy MUST NOT transform the payload (Section 3.3 of [RFC7231]) of
    a message that contains a no-transform Cache-Control directive
    (Section 5.2 of [RFC7234]).


Section 200, paragraph 0:
OLD:

    A proxy MAY transform the payload of a message that does not contain
    a no-transform cache-control directive.  A proxy that transforms a
    payload MUST add a Warning header field with the warn-code of 214
    ("Transformation Applied") if one is not already in the message (see
    Section 5.5 of [RFC7234]).  A proxy that transforms the payload of a
    200 (OK) response can further inform downstream recipients that a
    transformation has been applied by changing the response status code
    to 203 (Non-Authoritative Information) (Section 6.3.4 of [RFC7231]).

NEW:

    A proxy MAY transform the payload of a message that does not contain
    a no-transform Cache-Control directive.  A proxy that transforms a
    payload MUST add a Warning header field with the warn-code of 214
    ("Transformation Applied") if one is not already in the message (see
    Section 5.5 of [RFC7234]).  A proxy that transforms the payload of a
    200 (OK) response can further inform downstream recipients that a
    transformation has been applied by changing the response status code
    to 203 (Non-Authoritative Information) (Section 6.3.4 of [RFC7231]).


Section 9.2., paragraph 1:
OLD:

    By their very nature, HTTP intermediaries are men-in-the-middle and,
    thus, represent an opportunity for man-in-the-middle attacks.
    Compromise of the systems on which the intermediaries run can result
    in serious security and privacy problems.  Intermediaries might have
    access to security-related information, personal information about
    individual users and organizations, and proprietary information
    belonging to users and content providers.  A compromised
    intermediary, or an intermediary implemented or configured without
    regard to security and privacy considerations, might be used in the
    commission of a wide range of potential attacks.

NEW:

    By their very nature, HTTP intermediaries are men in the middle and,
    thus, represent an opportunity for man-in-the-middle attacks.
    Compromise of the systems on which the intermediaries run can result
    in serious security and privacy problems.  Intermediaries might have
    access to security-related information, personal information about
    individual users and organizations, and proprietary information
    belonging to users and content providers.  A compromised
    intermediary, or an intermediary implemented or configured without
    regard to security and privacy considerations, might be used in the
    commission of a wide range of potential attacks.


Section 11.1., paragraph 8:
OLD:

    [RFC7231]     Fielding, R., Ed. and J. Reschke, Ed., "Hypertext
                  Transfer Protocol (HTTP/1.1): Semantics and Content",
                  draft-ietf-httpbis-p2-semantics-latest (work in
                  progress), May 2014.

NEW:

    [RFC7231]     Fielding, R., Ed. and J. Reschke, Ed., "Hypertext
                  Transfer Protocol (HTTP/1.1): Semantics and Content",
                  RFC 7231, May 2014.


Section 11.1., paragraph 9:
OLD:

    [RFC7232]     Fielding, R., Ed. and J. Reschke, Ed., "Hypertext
                  Transfer Protocol (HTTP/1.1): Conditional Requests",
                  draft-ietf-httpbis-p4-conditional-latest (work in
                  progress), May 2014.

NEW:

    [RFC7232]     Fielding, R., Ed. and J. Reschke, Ed., "Hypertext
                  Transfer Protocol (HTTP/1.1): Conditional Requests",
                  RFC 7232, May 2014.


Section 11.1., paragraph 10:
OLD:

    [RFC7233]     Fielding, R., Ed., Lafon, Y., Ed., and J. Reschke, Ed.,
                  "Hypertext Transfer Protocol (HTTP/1.1): Range
                  Requests", draft-ietf-httpbis-p5-range-latest (work in
                  progress), May 2014.

NEW:

    [RFC7233]     Fielding, R., Ed., Lafon, Y., Ed., and J. Reschke, Ed.,
                  "Hypertext Transfer Protocol (HTTP/1.1): Range
                  Requests", RFC 7233, May 2014.


Section 11.1., paragraph 11:
OLD:

    [RFC7234]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
                  Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
                  draft-ietf-httpbis-p6-cache-latest (work in progress),
                  May 2014.

NEW:

    [RFC7234]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
                  Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
                  RFC 7234, May 2014.


Section 11.1., paragraph 12:
OLD:

    [RFC7235]     Fielding, R., Ed. and J. Reschke, Ed., "Hypertext
                  Transfer Protocol (HTTP/1.1): Authentication",
                  draft-ietf-httpbis-p7-auth-latest (work in progress),
                  May 2014.

NEW:

    [RFC7235]     Fielding, R., Ed. and J. Reschke, Ed., "Hypertext
                  Transfer Protocol (HTTP/1.1): Authentication",
                  RFC 7235, May 2014.


Appendix A., paragraph 7:
OLD:

 A.1.1.  Multi-homed Web Servers

NEW:

 A.1.1.  Multihomed Web Servers


Section 19.7.1, paragraph 9:
OLD:

    The HTTP-version ABNF production has been clarified to be case-
    sensitive.  Additionally, version numbers have been restricted to
    single digits, due to the fact that implementations are known to
    handle multi-digit version numbers incorrectly.  (Section 2.6)
    Userinfo (i.e., username and password) are now disallowed in HTTP and
    HTTPS URIs, because of security issues related to their transmission
    on the wire.  (Section 2.7.1)

NEW:

    The HTTP-version ABNF production has been clarified to be case-
    sensitive.  Additionally, version numbers have been restricted to
    single digits, due to the fact that implementations are known to
    handle multi-digit version numbers incorrectly.  (Section 2.6)
 
    Userinfo (i.e., username and password) are now disallowed in HTTP and
    HTTPS URIs, because of security issues related to their transmission
    on the wire.  (Section 2.7.1)


Section 19.7.1, paragraph 20:
OLD:

    The meaning of the "deflate" content coding has been clarified.
    (Section 4.2.2)
 
    The segment + query components of RFC 3986 have been used to define
    the request-target, instead of abs_path from RFC 1808.  The asterisk-
    form of the request-target is only allowed with the OPTIONS method.
    (Section 5.3)

NEW:

    The meaning of the "deflate" content coding has been clarified.
    (Section 4.2.2)
    The segment + query components of RFC 3986 have been used to define
    the request-target, instead of abs_path from RFC 1808.  The asterisk-
    form of the request-target is only allowed with the OPTIONS method.
    (Section 5.3)


Appendix B., paragraph 2:
OLD:

    Connection = *( "," OWS ) connection-option *( OWS "," [ OWS
     connection-option ] )
    Content-Length = 1*DIGIT

NEW:

    Connection = *( "," OWS ) connection-option *( OWS "," [ OWS
     connection-option ] )
 
    Content-Length = 1*DIGIT


Appendix B., paragraph 7:
OLD:

    URI-reference = <URI-reference, see [RFC3986], Section 4.1>
    Upgrade = *( "," OWS ) protocol *( OWS "," [ OWS protocol ] )

NEW:

    URI-reference = <URI-reference, defined in [RFC3986], Section 4.1>
    Upgrade = *( "," OWS ) protocol *( OWS "," [ OWS protocol ] )


Appendix B., paragraph 9:
OLD:

    absolute-URI = <absolute-URI, see [RFC3986], Section 4.3>
    absolute-form = absolute-URI
    absolute-path = 1*( "/" segment )
    asterisk-form = "*"
    authority = <authority, see [RFC3986], Section 3.2>
    authority-form = authority

NEW:

    absolute-URI = <absolute-URI, defined in [RFC3986], Section 4.3>
    absolute-form = absolute-URI
    absolute-path = 1*( "/" segment )
    asterisk-form = "*"
    authority = <authority, defined in [RFC3986], Section 3.2>
    authority-form = authority


Appendix B., paragraph 11:
OLD:

    field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
    field-name = token
    field-value = *( field-content / obs-fold )
    field-vchar = VCHAR / obs-text
    fragment = <fragment, see [RFC3986], Section 3.5>

NEW:

    field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
    field-name = token
    field-value = *( field-content / obs-fold )
    field-vchar = VCHAR / obs-text
    fragment = <fragment, defined in [RFC3986], Section 3.5>


Appendix B., paragraph 16:
OLD:

    partial-URI = relative-part [ "?" query ]
    path-abempty = <path-abempty, see [RFC3986], Section 3.3>
    port = <port, see [RFC3986], Section 3.2.3>
    protocol = protocol-name [ "/" protocol-version ]
    protocol-name = token
    protocol-version = token
    pseudonym = token

NEW:

    partial-URI = relative-part [ "?" query ]
    path-abempty = <path-abempty, defined in [RFC3986], Section 3.3>
    port = <port, defined in [RFC3986], Section 3.2.3>
    protocol = protocol-name [ "/" protocol-version ]
    protocol-name = token
    protocol-version = token
    pseudonym = token


Appendix B., paragraph 17:
OLD:

    qdtext = HTAB / SP / "!" / %x23-5B ; '#'-'['
     / %x5D-7E ; ']'-'~'
     / obs-text
    query = <query, see [RFC3986], Section 3.4>
    quoted-pair = "\" ( HTAB / SP / VCHAR / obs-text )
    quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE

NEW:

    qdtext = HTAB / SP / "!" / %x23-5B ; '#'-'['
     / %x5D-7E ; ']'-'~'
     / obs-text
    query = <query, defined in [RFC3986], Section 3.4>
    quoted-pair = "\" ( HTAB / SP / VCHAR / obs-text )
    quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE


Appendix B., paragraph 18:
OLD:

    rank = ( "0" [ "." *3DIGIT ] ) / ( "1" [ "." *3"0" ] )
    reason-phrase = *( HTAB / SP / VCHAR / obs-text )
    received-by = ( uri-host [ ":" port ] ) / pseudonym
    received-protocol = [ protocol-name "/" ] protocol-version
    relative-part = <relative-part, see [RFC3986], Section 4.2>
    request-line = method SP request-target SP HTTP-version CRLF
    request-target = origin-form / absolute-form / authority-form /
     asterisk-form

NEW:

    rank = ( "0" [ "." *3DIGIT ] ) / ( "1" [ "." *3"0" ] )
    reason-phrase = *( HTAB / SP / VCHAR / obs-text )
    received-by = ( uri-host [ ":" port ] ) / pseudonym
    received-protocol = [ protocol-name "/" ] protocol-version
    relative-part = <relative-part, defined in [RFC3986], Section 4.2>
    request-line = method SP request-target SP HTTP-version CRLF
    request-target = origin-form / absolute-form / authority-form /
     asterisk-form


Appendix B., paragraph 19:
OLD:

    scheme = <scheme, see [RFC3986], Section 3.1>
    segment = <segment, see [RFC3986], Section 3.3>
    start-line = request-line / status-line
    status-code = 3DIGIT
    status-line = HTTP-version SP status-code SP reason-phrase CRLF
 
    t-codings = "trailers" / ( transfer-coding [ t-ranking ] )
    t-ranking = OWS ";" OWS "q=" rank
    tchar = "!" / "#" / "$" / "%" / "&" / "'" / "*" / "+" / "-" / "." /
     "^" / "_" / "`" / "|" / "~" / DIGIT / ALPHA
    token = 1*tchar
    trailer-part = *( header-field CRLF )
    transfer-coding = "chunked" / "compress" / "deflate" / "gzip" /
     transfer-extension
    transfer-extension = token *( OWS ";" OWS transfer-parameter )
    transfer-parameter = token BWS "=" BWS ( token / quoted-string )

NEW:

    scheme = <scheme, defined in [RFC3986], Section 3.1>
    segment = <segment, defined in [RFC3986], Section 3.3>
    start-line = request-line / status-line
    status-code = 3DIGIT
    status-line = HTTP-version SP status-code SP reason-phrase CRLF
    t-codings = "trailers" / ( transfer-coding [ t-ranking ] )
    t-ranking = OWS ";" OWS "q=" rank
    tchar = "!" / "#" / "$" / "%" / "&" / "'" / "*" / "+" / "-" / "." /
     "^" / "_" / "`" / "|" / "~" / DIGIT / ALPHA
    token = 1*tchar
    trailer-part = *( header-field CRLF )
    transfer-coding = "chunked" / "compress" / "deflate" / "gzip" /
     transfer-extension
    transfer-extension = token *( OWS ";" OWS transfer-parameter )
    transfer-parameter = token BWS "=" BWS ( token / quoted-string )


Appendix B., paragraph 20:
OLD:

    uri-host = <host, see [RFC3986], Section 3.2.2>

NEW:

    uri-host = <host, defined in [RFC3986], Section 3.2.2>


Appendix B., paragraph 27:
OLD:

    G
       gateway  10
       Grammar
          absolute-form  41
          absolute-path  16
          absolute-URI  16
          ALPHA  6
          asterisk-form  41-42
          authority  16
          authority-form  41-42
          BWS  24
          chunk  35
          chunk-data  35
          chunk-ext  35-36
          chunk-ext-name  36
          chunk-ext-val  36
          chunk-size  35
          chunked-body  35-36
          comment  27
          Connection  50
          connection-option  50
          Content-Length  29
          CR  6
          CRLF  6
          ctext  27
          CTL  6
          DIGIT  6
          DQUOTE  6
          field-content  22
          field-name  22, 39
          field-value  22
          field-vchar  22
          fragment  16
          header-field  22, 36
          HEXDIG  6
          Host  43
          HTAB  6
          HTTP-message  19
          HTTP-name  13
          http-URI  16
          HTTP-version  13
          https-URI  18
          last-chunk  35
          LF  6
          message-body  27
          method  21
          obs-fold  22
          obs-text  27
          OCTET  6
          origin-form  41
          OWS  24
          partial-URI  16
          port  16
          protocol-name  47
          protocol-version  47
          pseudonym  47
          qdtext  27
          query  16
          quoted-pair  27
          quoted-string  27
          rank  38
          reason-phrase  22
          received-by  47
          received-protocol  47
          request-line  21
          request-target  41
          RWS  24
          scheme  16
          segment  16
          SP  6
          start-line  20
          status-code  22
          status-line  22
          t-codings  38
          t-ranking  38
          tchar  26
          TE  38
          token  26
          Trailer  39
          trailer-part  35-36
          transfer-coding  35
          Transfer-Encoding  28
          transfer-extension  35
          transfer-parameter  35
          Upgrade  56
          uri-host  16
          URI-reference  16
          VCHAR  6
          Via  47
 
       gzip (Coding Format)  38

NEW:

    G
       gateway  10
       Grammar
          absolute-form  41
          absolute-path  16
          absolute-URI  16
          ALPHA  6
          asterisk-form  41-42
          authority  16
          authority-form  41-42
          BWS  24
          chunk  35
          chunk-data  35
          chunk-ext  35-36
          chunk-ext-name  36
          chunk-ext-val  36
          chunk-size  35
          chunked-body  35-36
          comment  27
          Connection  50
          connection-option  50
          Content-Length  29
          CR  6
          CRLF  6
          ctext  27
          CTL  6
          DIGIT  6
          DQUOTE  6
          field-content  22
          field-name  22, 39
          field-value  22
          field-vchar  22
          fragment  16
          header-field  22, 36
          HEXDIG  6
          Host  43
          HTAB  6
          HTTP-message  19
          HTTP-name  13
          http-URI  16
          HTTP-version  13
          https-URI  18
          last-chunk  35
          LF  6
          message-body  27
          method  21
          obs-fold  22
          obs-text  27
          OCTET  6
          origin-form  41
          OWS  24
          partial-URI  16
          port  16
          protocol-name  47
          protocol-version  47
          pseudonym  47
          qdtext  27
          query  16
          quoted-pair  27
          quoted-string  27
          rank  38
          reason-phrase  22
          received-by  47
          received-protocol  47
          request-line  21
          request-target  41
          RWS  24
          scheme  16
          segment  16
          SP  6
          start-line  20
          status-code  22
          status-line  22
          t-codings  38
          t-ranking  38
          tchar  26
          TE  38
          token  26
          Trailer  39
          trailer-part  35-36
          transfer-coding  35
          Transfer-Encoding  28
          transfer-extension  35
          transfer-parameter  35
          Upgrade  56
          uri-host  16
          URI-reference  16
          VCHAR  6
          Via  47
       gzip (Coding Format)  38

