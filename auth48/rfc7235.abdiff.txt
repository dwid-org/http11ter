
INTRODUCTION, paragraph 1:
OLD:

 HTTPbis Working Group                                   R. Fielding, Ed.
 Internet-Draft                                                     Adobe
 Obsoletes: 2616 (if approved)                            J. Reschke, Ed.
 Updates: 2617 (if approved)                                   greenbytes
 Intended status: Standards Track                            May 16, 2014
 Expires: November 17, 2014

NEW:

 Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
 Request for Comments: 7235                                         Adobe
 Obsoletes: 2616                                          J. Reschke, Ed.
 Updates: 2617                                                 greenbytes
 Category: Standards Track                                       May 2014
 ISSN: 2070-1721


INTRODUCTION, paragraph 2:
OLD:

          Hypertext Transfer Protocol (HTTP/1.1): Authentication
                    draft-ietf-httpbis-p7-auth-latest

NEW:

          Hypertext Transfer Protocol (HTTP/1.1): Authentication


INTRODUCTION, paragraph 5:
OLD:

 Editorial Note (To be removed by RFC Editor)
 
    Discussion of this draft takes place on the HTTPBIS working group
    mailing list (ietf-http-wg@w3.org), which is archived at
    <http://lists.w3.org/Archives/Public/ietf-http-wg/>.
 
    The current issues list is at
    <http://tools.ietf.org/wg/httpbis/trac/report/3> and related
    documents (including fancy diffs) can be found at
    <http://tools.ietf.org/wg/httpbis/>.
 
    _This is a temporary document for the purpose of tracking the
    editorial changes made during the AUTH48 (RFC publication) phase._
 
 Status of This Memo

NEW:

 Status of This Memo


INTRODUCTION, paragraph 6:
OLD:

    This Internet-Draft is submitted in full conformance with the
    provisions of BCP 78 and BCP 79.
 
    Internet-Drafts are working documents of the Internet Engineering
    Task Force (IETF).  Note that other groups may also distribute
    working documents as Internet-Drafts.  The list of current Internet-
    Drafts is at http://datatracker.ietf.org/drafts/current/.

NEW:

    This is an Internet Standards Track document.


INTRODUCTION, paragraph 7:
OLD:

    Internet-Drafts are draft documents valid for a maximum of six months
    and may be updated, replaced, or obsoleted by other documents at any
    time.  It is inappropriate to use Internet-Drafts as reference
    material or to cite them other than as "work in progress."

NEW:

    This document is a product of the Internet Engineering Task Force
    (IETF).  It represents the consensus of the IETF community.  It has
    received public review and has been approved for publication by the
    Internet Engineering Steering Group (IESG).  Further information on
    Internet Standards is available in Section 2 of RFC 5741.


INTRODUCTION, paragraph 8:
OLD:

    This Internet-Draft will expire on November 17, 2014.

NEW:

    Information about the current status of this document, any errata,
    and how to provide feedback on it may be obtained at
    http://www.rfc-editor.org/info/rfc7235.


INTRODUCTION, paragraph 14:
OLD:

    1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
      1.1.  Conformance and Error Handling . . . . . . . . . . . . . .  4
      1.2.  Syntax Notation  . . . . . . . . . . . . . . . . . . . . .  4
    2.  Access Authentication Framework  . . . . . . . . . . . . . . .  4
      2.1.  Challenge and Response . . . . . . . . . . . . . . . . . .  4
      2.2.  Protection Space (Realm) . . . . . . . . . . . . . . . . .  6
    3.  Status Code Definitions  . . . . . . . . . . . . . . . . . . .  7
      3.1.  401 Unauthorized . . . . . . . . . . . . . . . . . . . . .  7
      3.2.  407 Proxy Authentication Required  . . . . . . . . . . . .  7
    4.  Header Field Definitions . . . . . . . . . . . . . . . . . . .  7
      4.1.  WWW-Authenticate . . . . . . . . . . . . . . . . . . . . .  8
      4.2.  Authorization  . . . . . . . . . . . . . . . . . . . . . .  8
      4.3.  Proxy-Authenticate . . . . . . . . . . . . . . . . . . . .  9
      4.4.  Proxy-Authorization  . . . . . . . . . . . . . . . . . . .  9
    5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 10
      5.1.  Authentication Scheme Registry . . . . . . . . . . . . . . 10
        5.1.1.  Procedure  . . . . . . . . . . . . . . . . . . . . . . 10
        5.1.2.  Considerations for New Authentication Schemes  . . . . 10
      5.2.  Status Code Registration . . . . . . . . . . . . . . . . . 12
      5.3.  Header Field Registration  . . . . . . . . . . . . . . . . 12
    6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 12
      6.1.  Confidentiality of Credentials . . . . . . . . . . . . . . 13
      6.2.  Authentication Credentials and Idle Clients  . . . . . . . 13
      6.3.  Protection Spaces  . . . . . . . . . . . . . . . . . . . . 14
    7.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 14
    8.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 14
      8.1.  Normative References . . . . . . . . . . . . . . . . . . . 14
      8.2.  Informative References . . . . . . . . . . . . . . . . . . 15
    Appendix A.  Changes from RFCs 2616 and 2617 . . . . . . . . . . . 16
    Appendix B.  Imported ABNF . . . . . . . . . . . . . . . . . . . . 16
    Appendix C.  Collected ABNF  . . . . . . . . . . . . . . . . . . . 16
    Index  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

NEW:

    1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
      1.1.  Conformance and Error Handling . . . . . . . . . . . . . .  3
      1.2.  Syntax Notation  . . . . . . . . . . . . . . . . . . . . .  3
    2.  Access Authentication Framework  . . . . . . . . . . . . . . .  3
      2.1.  Challenge and Response . . . . . . . . . . . . . . . . . .  3
      2.2.  Protection Space (Realm) . . . . . . . . . . . . . . . . .  5
    3.  Status Code Definitions  . . . . . . . . . . . . . . . . . . .  6
      3.1.  401 Unauthorized . . . . . . . . . . . . . . . . . . . . .  6
      3.2.  407 Proxy Authentication Required  . . . . . . . . . . . .  6
    4.  Header Field Definitions . . . . . . . . . . . . . . . . . . .  6
      4.1.  WWW-Authenticate . . . . . . . . . . . . . . . . . . . . .  7
      4.2.  Authorization  . . . . . . . . . . . . . . . . . . . . . .  7
      4.3.  Proxy-Authenticate . . . . . . . . . . . . . . . . . . . .  8
      4.4.  Proxy-Authorization  . . . . . . . . . . . . . . . . . . .  8
    5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  9
      5.1.  Authentication Scheme Registry . . . . . . . . . . . . . .  9
        5.1.1.  Procedure  . . . . . . . . . . . . . . . . . . . . . .  9
        5.1.2.  Considerations for New Authentication Schemes  . . . .  9
      5.2.  Status Code Registration . . . . . . . . . . . . . . . . . 11
      5.3.  Header Field Registration  . . . . . . . . . . . . . . . . 11
    6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 11
      6.1.  Confidentiality of Credentials . . . . . . . . . . . . . . 12
      6.2.  Authentication Credentials and Idle Clients  . . . . . . . 12
      6.3.  Protection Spaces  . . . . . . . . . . . . . . . . . . . . 13
    7.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 13
    8.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 13
      8.1.  Normative References . . . . . . . . . . . . . . . . . . . 13
      8.2.  Informative References . . . . . . . . . . . . . . . . . . 14
    Appendix A.  Changes from RFCs 2616 and 2617 . . . . . . . . . . . 15
    Appendix B.  Imported ABNF . . . . . . . . . . . . . . . . . . . . 15
    Appendix C.  Collected ABNF  . . . . . . . . . . . . . . . . . . . 15
    Index  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16


Section 1., paragraph 1:
OLD:

    HTTP provides a general framework for access control and
    authentication, via an extensible set of challenge-response
    authentication schemes, which can be used by a server to challenge a
    client request and by a client to provide authentication information.
    This document defines HTTP/1.1 authentication in terms of the
    architecture defined in [RFC7230], including the general framework
    previously described in RFC 2617 and the related fields and status
    codes previously defined in RFC 2616.

NEW:

    HTTP provides a general framework for access control and
    authentication, via an extensible set of challenge-response
    authentication schemes, which can be used by a server to challenge a
    client request and by a client to provide authentication information.
    This document defines HTTP/1.1 authentication in terms of the
    architecture defined in [RFC7230], including the general framework
    previously described in [RFC2617] and the related fields and status
    codes previously defined in [RFC2616].


Section 2.1., paragraph 1:
OLD:

    HTTP provides a simple challenge-response authentication framework
    that can be used by a server to challenge a client request and by a
    client to provide authentication information.  It uses a case-
    insensitive token as a means to identify the authentication scheme,
    followed by additional information necessary for achieving
    authentication via that scheme.  The latter can either be a comma-
    separated list of parameters or a single sequence of characters
    capable of holding base64-encoded information.

NEW:

    HTTP provides a simple challenge-response authentication framework
    that can be used by a server to challenge a client request and by a
    client to provide authentication information.  It uses a case-
    insensitive token as a means to identify the authentication scheme,
    followed by additional information necessary for achieving
    authentication via that scheme.  The latter can be either a comma-
    separated list of parameters or a single sequence of characters
    capable of holding base64-encoded information.


Section 2.1., paragraph 17:
OLD:

    A server that receives valid credentials which are not adequate to
    gain access ought to respond with the 403 (Forbidden) status code
    (Section 6.5.3 of [RFC7231]).

NEW:

    A server that receives valid credentials that are not adequate to
    gain access ought to respond with the 403 (Forbidden) status code
    (Section 6.5.3 of [RFC7231]).


Section 5.5, paragraph 0:
OLD:

    A protection space is defined by the canonical root URI (the scheme
    and authority components of the effective request URI; see Section
    5.5 of [RFC7230]) of the server being accessed, in combination with
    the realm value if present.  These realms allow the protected
    resources on a server to be partitioned into a set of protection
    spaces, each with its own authentication scheme and/or authorization
    database.  The realm value is a string, generally assigned by the
    origin server, which can have additional semantics specific to the
    authentication scheme.  Note that a response can have multiple
    challenges with the same auth-scheme but different realms.

NEW:

    A protection space is defined by the canonical root URI (the scheme
    and authority components of the effective request URI; see Section
    5.5 of [RFC7230]) of the server being accessed, in combination with
    the realm value if present.  These realms allow the protected
    resources on a server to be partitioned into a set of protection
    spaces, each with its own authentication scheme and/or authorization
    database.  The realm value is a string, generally assigned by the
    origin server, that can have additional semantics specific to the
    authentication scheme.  Note that a response can have multiple
    challenges with the same auth-scheme but with different realms.


Section 3.2., paragraph 1:
OLD:

    The 407 (Proxy Authentication Required) status code is similar to 401
    (Unauthorized), but indicates that the client needs to authenticate
    itself in order to use a proxy.  The proxy MUST send a Proxy-
    Authenticate header field (Section 4.3) containing a challenge
    applicable to that proxy for the target resource.  The client MAY
    repeat the request with a new or replaced Proxy-Authorization header
    field (Section 4.4).

NEW:

    The 407 (Proxy Authentication Required) status code is similar to 401
    (Unauthorized), but it indicates that the client needs to
    authenticate itself in order to use a proxy.  The proxy MUST send a
    Proxy-Authenticate header field (Section 4.3) containing a challenge
    applicable to that proxy for the target resource.  The client MAY
    repeat the request with a new or replaced Proxy-Authorization header
    field (Section 4.4).


Section 5.1., paragraph 1:
OLD:

    The HTTP Authentication Scheme Registry defines the namespace for the
    authentication schemes in challenges and credentials.  It will be
    created and maintained at (the suggested URI)
    <http://www.iana.org/assignments/http-authschemes>.

NEW:

    The "HTTP Authentication Schemes" registry defines the name space for
    the authentication schemes in challenges and credentials.  The
    registry has been created and is now maintained at
    <http://www.iana.org/assignments/http-authschemes>.


Section 5.1.2., paragraph 3:
OLD:

    o  The authentication parameter "realm" is reserved for defining
       Protection Spaces as defined in Section 2.2.  New schemes MUST NOT
       use it in a way incompatible with that definition.

NEW:

    o  The authentication parameter "realm" is reserved for defining
       protection spaces as described in Section 2.2.  New schemes MUST
       NOT use it in a way incompatible with that definition.


Section 5.1.2., paragraph 4:
OLD:

    o  The "token68" notation was introduced for compatibility with
       existing authentication schemes and can only be used once per
       challenge or credential.  New schemes thus ought to use the "auth-
       param" syntax instead, because otherwise future extensions will be
       impossible.

NEW:

    o  The "token68" notation was introduced for compatibility with
       existing authentication schemes and can only be used once per
       challenge or credential.  Thus, new schemes ought to use the auth-
       param syntax instead, because otherwise future extensions will be
       impossible.


Section 5.1.2., paragraph 5:
OLD:

    o  The parsing of challenges and credentials is defined by this
       specification, and cannot be modified by new authentication
       schemes.  When the auth-param syntax is used, all parameters ought
       to support both token and quoted-string syntax, and syntactical
       constraints ought to be defined on the field value after parsing
       (i.e., quoted-string processing).  This is necessary so that
       recipients can use a generic parser that applies to all
       authentication schemes.

NEW:

    o  The parsing of challenges and credentials is defined by this
       specification and cannot be modified by new authentication
       schemes.  When the auth-param syntax is used, all parameters ought
       to support both token and quoted-string syntax, and syntactical
       constraints ought to be defined on the field value after parsing
       (i.e., quoted-string processing).  This is necessary so that
       recipients can use a generic parser that applies to all
       authentication schemes.


Section 5.1.2., paragraph 7:
OLD:

    o  Definitions of new schemes ought to define the treatment of
       unknown extension parameters.  In general, a "must-ignore" rule is
       preferable over "must-understand", because otherwise it will be
       hard to introduce new parameters in the presence of legacy
       recipients.  Furthermore, it's good to describe the policy for
       defining new parameters (such as "update the specification", or
       "use this registry").

NEW:

    o  Definitions of new schemes ought to define the treatment of
       unknown extension parameters.  In general, a "must-ignore" rule is
       preferable to a "must-understand" rule, because otherwise it will
       be hard to introduce new parameters in the presence of legacy
       recipients.  Furthermore, it's good to describe the policy for
       defining new parameters (such as "update the specification" or
       "use this registry").


Section 5.1.2., paragraph 9:
OLD:

    o  The credentials carried in an Authorization header field are
       specific to the User Agent, and therefore have the same effect on
       HTTP caches as the "private" Cache-Control response directive
       (Section 5.2.2.6 of [RFC7234]), within the scope of the request
       they appear in.

NEW:

    o  The credentials carried in an Authorization header field are
       specific to the user agent and, therefore, have the same effect on
       HTTP caches as the "private" Cache-Control response directive
       (Section 5.2.2.6 of [RFC7234]), within the scope of the request in
       which they appear.


Section 5.2., paragraph 1:
OLD:

    The "Hypertext Transfer Protocol (HTTP) Status Code Registry" located
    at <http://www.iana.org/assignments/http-status-codes> has been
    updated with the registrations below:

NEW:

    The HTTP Status Code Registry located at
    <http://www.iana.org/assignments/http-status-codes> shall be updated
    with the registrations below:


Section 5.3., paragraph 1:
OLD:

    HTTP header fields are registered within the "Message Headers"
    registry maintained at
    <http://www.iana.org/assignments/message-headers/>.

NEW:

    HTTP header fields are registered within the Message Header Field
    Registry maintained at
    <http://www.iana.org/assignments/message-headers>.


Section 5.3., paragraph 2:
OLD:

    This document defines the following HTTP header fields, so the
    "Permanent Message Header Field Names" registry has been updated
    accordingly (see [BCP90]).

NEW:

    This document defines the following HTTP header fields, so their
    associated registry entries have been updated according to the
    permanent registrations below (see [BCP90]):


Section 6.1., paragraph 2:
OLD:

    HTTP depends on the security properties of the underlying transport-
    or session-level connection to provide confidential transmission of
    header fields.  In other words, if a server limits access to
    authenticated users using this framework, the server needs to ensure
    that the connection is properly secured in accordance with the nature
    of the authentication scheme used.  For example, services that depend
    on individual user authentication often require a connection to be
    secured with TLS ("Transport Layer Security", [RFC5246]) prior to
    exchanging any credentials.

NEW:

    HTTP depends on the security properties of the underlying transport
    or session-level connection to provide confidential transmission of
    header fields.  In other words, if a server limits access to
    authenticated users using this framework, the server needs to ensure
    that the connection is properly secured in accordance with the nature
    of the authentication scheme used.  For example, services that depend
    on individual user authentication often require a connection to be
    secured with TLS ("Transport Layer Security", [RFC5246]) prior to
    exchanging any credentials.


Section 8.1., paragraph 3:
OLD:

    [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
               Protocol (HTTP/1.1): Message Syntax and Routing",
               draft-ietf-httpbis-p1-messaging-latest (work in progress),
               May 2014.

NEW:

    [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
               Protocol (HTTP/1.1): Message Syntax and Routing",
               RFC 7230, May 2014.


Section 8.1., paragraph 4:
OLD:

    [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
               Protocol (HTTP/1.1): Semantics and Content",
               draft-ietf-httpbis-p2-semantics-latest (work in progress),
               May 2014.

NEW:

    [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
               Protocol (HTTP/1.1): Semantics and Content", RFC 7231,
               May 2014.


Section 8.1., paragraph 5:
OLD:

    [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
               Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
               draft-ietf-httpbis-p6-cache-latest (work in progress),
               May 2014.

NEW:

    [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
               Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
               RFC 7234, May 2014.


Section 1.2, paragraph 11:
OLD:

    4
       401 Unauthorized (status code)  7
       407 Proxy Authentication Required (status code)  7

NEW:

    4
       401 Unauthorized (status code)  6
       407 Proxy Authentication Required (status code)  6


Section 1.2, paragraph 12:
OLD:

    A
       Authorization header field  8

NEW:

    A
       Authorization header field  7


Section 1.2, paragraph 13:
OLD:

    C
       Canonical Root URI  6

NEW:

    C
       Canonical Root URI  5


Section 1.2, paragraph 14:
OLD:

    G
       Grammar
          auth-param  5
          auth-scheme  5
          Authorization  8
          challenge  5
          credentials  6
          Proxy-Authenticate  9
          Proxy-Authorization  9
          token68  5
          WWW-Authenticate  8

NEW:

    G
       Grammar
          auth-param  4
          auth-scheme  4
          Authorization  7
          challenge  4
          credentials  5
          Proxy-Authenticate  8
          Proxy-Authorization  8
          token68  4
          WWW-Authenticate  7


Section 1.2, paragraph 15:
OLD:

    P
       Protection Space  6
       Proxy-Authenticate header field  9
       Proxy-Authorization header field  9

NEW:

    P
       Protection Space  5
       Proxy-Authenticate header field  8
       Proxy-Authorization header field  8


Section 1.2, paragraph 16:
OLD:

    R
       Realm  6

NEW:

    R
       Realm  5


Section 1.2, paragraph 17:
OLD:

    W
       WWW-Authenticate header field  8

NEW:

    W
       WWW-Authenticate header field  7

